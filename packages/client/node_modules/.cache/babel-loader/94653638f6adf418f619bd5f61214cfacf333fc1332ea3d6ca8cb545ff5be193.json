{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Learning/assignment/kordis 2/packages/client/src/SpreadSheet/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport getTransformedData from \"./getTransformedData\";\nimport { useSpreadsheetTable } from \"./useSpreadsheetTable\";\nimport getColumns from \"./getColumns\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SpreadsheetList = () => {\n  const data = [{\n    name: \"Spreadsheet\"\n  }, {\n    name: \"Spreadsheet2\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spreadsheet-list\",\n    children: data.map((current, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spreadsheet-list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"spreadsheet-list-img\",\n          src: \"../../spreadsheet-image.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: current.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = SpreadsheetList;\nconst SpreadSheetTable = _ref => {\n  _s();\n  let {\n    value\n  } = _ref;\n  const [data, setData] = useState(value);\n  const [tableData, setTableData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [setter, setSetter] = useState(false);\n  useEffect(() => {\n    if (Object.keys(data).length) {\n      const newData = getTransformedData(data.data, data);\n      setTableData(newData.reduce((acc, val) => {\n        Object.keys(val).forEach(e => {\n          acc.push(val[e]);\n        });\n        return acc;\n      }, []));\n      setColumns(getColumns(data));\n    }\n  }, [setter, data, setTableData, setColumns]);\n  const {\n    table,\n    flexRender\n  } = useSpreadsheetTable(tableData, columns, data, setData, setSetter);\n  if (!tableData) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spreadsheet-text\",\n        children: \"Spreadsheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headerGroup.headers.map(header => {\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: header.colSpan,\n                children: header.isPlaceholder ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: flexRender(header.column.columnDef.header, header.getContext())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 25\n                }, this)\n              }, header.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this);\n            })\n          }, headerGroup.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table.getRowModel().rows.map(row => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.getVisibleCells().map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: flexRender(cell.column.columnDef.cell, cell.getContext())\n                }, cell.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this);\n              })\n            }, row.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(SpreadSheetTable, \"3fvHKJ9lvszhBYnBtIt3NcVRXiQ=\", false, function () {\n  return [useSpreadsheetTable];\n});\n_c2 = SpreadSheetTable;\nexport default SpreadSheetTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"SpreadsheetList\");\n$RefreshReg$(_c2, \"SpreadSheetTable\");","map":{"version":3,"names":["React","useEffect","useState","getTransformedData","useSpreadsheetTable","getColumns","jsxDEV","_jsxDEV","Fragment","_Fragment","SpreadsheetList","data","name","className","children","map","current","index","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","SpreadSheetTable","_ref","_s","value","setData","tableData","setTableData","columns","setColumns","setter","setSetter","Object","keys","length","newData","reduce","acc","val","forEach","e","push","table","flexRender","Sidebar","getHeaderGroups","headerGroup","headers","header","colSpan","isPlaceholder","column","columnDef","getContext","id","getRowModel","rows","row","getVisibleCells","cell","_c2","$RefreshReg$"],"sources":["/Users/dev/Learning/assignment/kordis 2/packages/client/src/SpreadSheet/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport getTransformedData from \"./getTransformedData\";\nimport { useSpreadsheetTable } from \"./useSpreadsheetTable\";\nimport getColumns from \"./getColumns\";\nimport \"./index.css\";\n\nexport const SpreadsheetList = () => {\n  const data = [{ name: \"Spreadsheet\" }, { name: \"Spreadsheet2\" }];\n\n  return (\n    <div className=\"spreadsheet-list\">\n      {data.map((current, index) => {\n        return (\n          <div key={index} className=\"spreadsheet-list-item\">\n            <img\n              className=\"spreadsheet-list-img\"\n              src={\"../../spreadsheet-image.png\"}\n            />\n            <h4>{current.name}</h4>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst SpreadSheetTable = ({ value }) => {\n  const [data, setData] = useState(value);\n  const [tableData, setTableData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [setter, setSetter] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(data).length) {\n      const newData = getTransformedData(data.data, data);\n      setTableData(\n        newData.reduce((acc, val) => {\n          Object.keys(val).forEach((e) => {\n            acc.push(val[e]);\n          });\n          return acc;\n        }, [])\n      );\n\n      setColumns(getColumns(data));\n    }\n  }, [setter, data, setTableData, setColumns]);\n\n  const { table, flexRender } = useSpreadsheetTable(\n    tableData,\n    columns,\n    data,\n    setData,\n    setSetter\n  );\n\n  if (!tableData) return <></>;\n\n  return (\n    <div className=\"parent\">\n      <div className=\"h-2\" />\n      <Sidebar />\n      <div className=\"container\">\n        <div className=\"spreadsheet-text\">Spreadsheet</div>\n        <table className=\"table\">\n          <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <th key={header.id} colSpan={header.colSpan}>\n                      {header.isPlaceholder ? null : (\n                        <div>\n                          {flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                        </div>\n                      )}\n                    </th>\n                  );\n                })}\n              </tr>\n            ))}\n          </thead>\n\n          <tbody>\n            {table.getRowModel().rows.map((row) => {\n              return (\n                <tr key={row.id}>\n                  {row.getVisibleCells().map((cell) => {\n                    return (\n                      <td key={cell.id}>\n                        {flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext()\n                        )}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default SpreadSheetTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
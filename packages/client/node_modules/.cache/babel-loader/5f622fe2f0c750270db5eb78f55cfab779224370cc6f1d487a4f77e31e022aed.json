{"ast":null,"code":"export const dummyData = {\n  headers: [\"item\", \"jan-2023\", \"feb-2023\", \"mar-2023\", \"total\"],\n  data: {\n    expense: {\n      item: \"expense\",\n      \"jan-2023\": 5,\n      \"feb-2023\": 21,\n      \"mar-2023\": 35,\n      \"total\": \"=(((B10)+(B11))+(B12))+(B13)\"\n    },\n    loss: {\n      item: \"loss\",\n      \"jan-2023\": 50,\n      \"feb-2023\": 20,\n      \"mar-2023\": 47,\n      \"total\": \"=(((B10)+(B11))+(B12))+(B13)\"\n    },\n    salary: {\n      item: \"salary\",\n      \"jan-2023\": 511,\n      \"feb-2023\": 23,\n      \"mar-2023\": 49,\n      \"total\": \"=(((B10)+(B11))+(B12))+(B13)\"\n    },\n    income: {\n      item: \"income\",\n      \"jan-2023\": 59,\n      \"feb-2023\": 25,\n      \"mar-2023\": 45,\n      \"total\": \"=(((B10)+(B11))+(B12))+(B13)\"\n    },\n    fixedDeposit: {\n      item: \"fixedDeposit\",\n      \"jan-2023\": 59,\n      \"feb-2023\": 25,\n      \"mar-2023\": 45,\n      \"total\": \"=(((B10)+(B11))+(B12))+(B13)\"\n    }\n  },\n  root: {\n    expense: [{\n      loss: []\n    }],\n    salary: [{\n      income: []\n    }, {\n      fixedDeposit: []\n    }]\n  }\n};\n\n// const subComponents = () => {\n//     const root = dummyData.root;\n//     const recursiveCall = (e) => {\n//         root[e].forEach(a=>{\n//             Object.keys(a[e])\n//         })\n//     }\n//     Object.keys(root).forEach(e=>{\n//         if (root[e].length) {\n//             recursiveCall(e)\n//         }\n//     })\n// }\n\nexport const columns = dummyData.headers.map(e => {\n  return {\n    accessorKey: e,\n    header: () => e.toUpperCase(),\n    // ...{ cells:()=>{}}\n    footer: props => props.column.id\n  };\n});\nexport const data3 = Object.keys(dummyData.data).reduce((acc, e) => {\n  acc.push(dummyData.data[e]);\n  return acc;\n}, []);","map":{"version":3,"names":["dummyData","headers","data","expense","item","loss","salary","income","fixedDeposit","root","columns","map","e","accessorKey","header","toUpperCase","footer","props","column","id","data3","Object","keys","reduce","acc","push"],"sources":["/home/ubuntu/Desktop/SpreadSheet/spreadsheet-app/src/Spreadsheet/data.js"],"sourcesContent":["\nexport const dummyData = {\n    headers: [\"item\", \"jan-2023\", \"feb-2023\", \"mar-2023\", \"total\"],\n    data: {\n        expense: { item: \"expense\", \"jan-2023\": 5, \"feb-2023\": 21, \"mar-2023\": 35, \"total\": \"=(((B10)+(B11))+(B12))+(B13)\" },\n        loss: { item: \"loss\", \"jan-2023\": 50, \"feb-2023\": 20, \"mar-2023\": 47, \"total\": \"=(((B10)+(B11))+(B12))+(B13)\" },\n        salary: { item: \"salary\", \"jan-2023\": 511, \"feb-2023\": 23, \"mar-2023\": 49, \"total\": \"=(((B10)+(B11))+(B12))+(B13)\" },\n        income: { item: \"income\", \"jan-2023\": 59, \"feb-2023\": 25, \"mar-2023\": 45, \"total\": \"=(((B10)+(B11))+(B12))+(B13)\" },\n        fixedDeposit: { item: \"fixedDeposit\", \"jan-2023\": 59, \"feb-2023\": 25, \"mar-2023\": 45, \"total\": \"=(((B10)+(B11))+(B12))+(B13)\" }\n    },\n    root: {\n        expense: [\n            {\n                loss: []\n            }\n        ],\n        salary: [\n            { income: [] },\n            { fixedDeposit: [] }\n        ]\n    },\n}\n\n// const subComponents = () => {\n//     const root = dummyData.root;\n//     const recursiveCall = (e) => {\n//         root[e].forEach(a=>{\n//             Object.keys(a[e])\n//         })\n//     }\n//     Object.keys(root).forEach(e=>{\n//         if (root[e].length) {\n//             recursiveCall(e)\n//         }\n//     })\n// }\n\n\n\nexport const columns = dummyData.headers.map(e => {\n    return {\n        accessorKey: e,\n        header: () => e.toUpperCase(),\n        // ...{ cells:()=>{}}\n        footer: (props) => props.column.id,\n    }\n})\n\nexport const data3 = Object.keys(dummyData.data).reduce((acc, e) => {\n    acc.push(dummyData.data[e])\n    return acc\n}, [])\n\n\n\n\n\n"],"mappings":"AACA,OAAO,MAAMA,SAAS,GAAG;EACrBC,OAAO,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC;EAC9DC,IAAI,EAAE;IACFC,OAAO,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAE,UAAU,EAAE,CAAC;MAAE,UAAU,EAAE,EAAE;MAAE,UAAU,EAAE,EAAE;MAAE,OAAO,EAAE;IAA+B,CAAC;IACpHC,IAAI,EAAE;MAAED,IAAI,EAAE,MAAM;MAAE,UAAU,EAAE,EAAE;MAAE,UAAU,EAAE,EAAE;MAAE,UAAU,EAAE,EAAE;MAAE,OAAO,EAAE;IAA+B,CAAC;IAC/GE,MAAM,EAAE;MAAEF,IAAI,EAAE,QAAQ;MAAE,UAAU,EAAE,GAAG;MAAE,UAAU,EAAE,EAAE;MAAE,UAAU,EAAE,EAAE;MAAE,OAAO,EAAE;IAA+B,CAAC;IACpHG,MAAM,EAAE;MAAEH,IAAI,EAAE,QAAQ;MAAE,UAAU,EAAE,EAAE;MAAE,UAAU,EAAE,EAAE;MAAE,UAAU,EAAE,EAAE;MAAE,OAAO,EAAE;IAA+B,CAAC;IACnHI,YAAY,EAAE;MAAEJ,IAAI,EAAE,cAAc;MAAE,UAAU,EAAE,EAAE;MAAE,UAAU,EAAE,EAAE;MAAE,UAAU,EAAE,EAAE;MAAE,OAAO,EAAE;IAA+B;EAClI,CAAC;EACDK,IAAI,EAAE;IACFN,OAAO,EAAE,CACL;MACIE,IAAI,EAAE;IACV,CAAC,CACJ;IACDC,MAAM,EAAE,CACJ;MAAEC,MAAM,EAAE;IAAG,CAAC,EACd;MAAEC,YAAY,EAAE;IAAG,CAAC;EAE5B;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAO,MAAME,OAAO,GAAGV,SAAS,CAACC,OAAO,CAACU,GAAG,CAACC,CAAC,IAAI;EAC9C,OAAO;IACHC,WAAW,EAAED,CAAC;IACdE,MAAM,EAAEA,CAAA,KAAMF,CAAC,CAACG,WAAW,CAAC,CAAC;IAC7B;IACAC,MAAM,EAAGC,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACC;EACpC,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACtB,SAAS,CAACE,IAAI,CAAC,CAACqB,MAAM,CAAC,CAACC,GAAG,EAAEZ,CAAC,KAAK;EAChEY,GAAG,CAACC,IAAI,CAACzB,SAAS,CAACE,IAAI,CAACU,CAAC,CAAC,CAAC;EAC3B,OAAOY,GAAG;AACd,CAAC,EAAE,EAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
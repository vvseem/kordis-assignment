{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Downloads/spreadsheet-app/src/Spreadsheet/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './index.css';\n// import { Table } from './Table'\n\nimport useAPICall from '../customHook/useApiCall';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpreadSheetTable = () => {\n  _s();\n  const {\n    data,\n    error,\n    x\n  } = useAPICall(\"http://localhost:4001/api/getData\");\n  // const { table, flexRender } = useTable(x || [],data || [])\n  // if(loading){\n  // return<></>;  \n  // }\n  const table = {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: header.colSpan,\n              children: header.isPlaceholder ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: flexRender(header.column.columnDef.header, header.getContext())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 23\n              }, this)\n            }, header.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 19\n            }, this);\n          })\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.getVisibleCells().map(cell => {\n              console.log(\"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\", cell);\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: flexRender(cell.column.columnDef.cell, cell.getContext())\n              }, cell.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this);\n            })\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(SpreadSheetTable, \"MSGAcM5fYP73fYAyoQ/3E08Fpmc=\", false, function () {\n  return [useAPICall];\n});\n_c = SpreadSheetTable;\nexport default SpreadSheetTable;\nvar _c;\n$RefreshReg$(_c, \"SpreadSheetTable\");","map":{"version":3,"names":["React","useAPICall","jsxDEV","_jsxDEV","SpreadSheetTable","_s","data","error","x","table","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getHeaderGroups","map","headerGroup","headers","header","colSpan","isPlaceholder","flexRender","column","columnDef","getContext","id","getRowModel","rows","row","getVisibleCells","cell","console","log","_c","$RefreshReg$"],"sources":["/home/ubuntu/Downloads/spreadsheet-app/src/Spreadsheet/index.tsx"],"sourcesContent":["import React, { HTMLProps } from 'react'\n\nimport './index.css'\n// import { Table } from './Table'\nimport { useTable } from '../customHook/useCreAteTable'\nimport useAPICall from '../customHook/useApiCall'\n\nconst SpreadSheetTable = () => {\n\n  const { data, error, x } = useAPICall(\"http://localhost:4001/api/getData\")\n  // const { table, flexRender } = useTable(x || [],data || [])\n  // if(loading){\n  // return<></>;  \n  // }\n  const table ={}\n\n  return (\n    <div className=\"p-2\">\n      <div className=\"h-2\" />\n      <table>\n        <thead>\n          {table.getHeaderGroups().map((headerGroup: any) => (\n            <tr key={headerGroup.id}>\n              {headerGroup.headers.map((header: any) => {\n                return (\n                  <th key={header.id} colSpan={header.colSpan}>\n                    {header.isPlaceholder ? null : (\n                      <div>\n                        {flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                      </div>\n                    )}\n                  </th>\n                )\n              })}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {table.getRowModel().rows.map((row: any) => {\n            return (\n              <tr key={row.id}>\n                {row.getVisibleCells().map((cell: any) => {\n                  console.log(\"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\",cell)\n                  return (\n                    <td key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </td>\n                  )\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      <div className=\"h-2\" />\n    </div>\n  )\n\n}\nexport default SpreadSheetTable\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAqB,OAAO;AAExC,OAAO,aAAa;AACpB;;AAEA,OAAOC,UAAU,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE7B,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAE,CAAC,GAAGP,UAAU,CAAC,mCAAmC,CAAC;EAC1E;EACA;EACA;EACA;EACA,MAAMQ,KAAK,GAAE,CAAC,CAAC;EAEf,oBACEN,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBR,OAAA;MAAKO,SAAS,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBZ,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,EACGF,KAAK,CAACO,eAAe,CAAC,CAAC,CAACC,GAAG,CAAEC,WAAgB,iBAC5Cf,OAAA;UAAAQ,QAAA,EACGO,WAAW,CAACC,OAAO,CAACF,GAAG,CAAEG,MAAW,IAAK;YACxC,oBACEjB,OAAA;cAAoBkB,OAAO,EAAED,MAAM,CAACC,OAAQ;cAAAV,QAAA,EACzCS,MAAM,CAACE,aAAa,GAAG,IAAI,gBAC1BnB,OAAA;gBAAAQ,QAAA,EACGY,UAAU,CACTH,MAAM,CAACI,MAAM,CAACC,SAAS,CAACL,MAAM,EAC9BA,MAAM,CAACM,UAAU,CAAC,CACpB;cAAC;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE;YACN,GARMK,MAAM,CAACO,EAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASd,CAAC;UAET,CAAC;QAAC,GAdKG,WAAW,CAACS,EAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAenB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRZ,OAAA;QAAAQ,QAAA,EACGF,KAAK,CAACmB,WAAW,CAAC,CAAC,CAACC,IAAI,CAACZ,GAAG,CAAEa,GAAQ,IAAK;UAC1C,oBACE3B,OAAA;YAAAQ,QAAA,EACGmB,GAAG,CAACC,eAAe,CAAC,CAAC,CAACd,GAAG,CAAEe,IAAS,IAAK;cACxCC,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAACF,IAAI,CAAC;cACjE,oBACE7B,OAAA;gBAAAQ,QAAA,EACGY,UAAU,CACTS,IAAI,CAACR,MAAM,CAACC,SAAS,CAACO,IAAI,EAC1BA,IAAI,CAACN,UAAU,CAAC,CAClB;cAAC,GAJMM,IAAI,CAACL,EAAE;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKZ,CAAC;YAET,CAAC;UAAC,GAXKe,GAAG,CAACH,EAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYX,CAAC;QAET,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRZ,OAAA;MAAKO,SAAS,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAGV,CAAC;AAAAV,EAAA,CAzDKD,gBAAgB;EAAA,QAEOH,UAAU;AAAA;AAAAkC,EAAA,GAFjC/B,gBAAgB;AA0DtB,eAAeA,gBAAgB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Learning/assignment/kordis 2/packages/client/src/SpreadSheet/useSpreadsheetTable.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useReactTable, getCoreRowModel, getExpandedRowModel, ColumnDef, flexRender } from \"@tanstack/react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableInput = _ref => {\n  _s();\n  let {\n    table,\n    column,\n    row,\n    getValue\n  } = _ref;\n  const initialValue = getValue();\n  const [value, setValue] = useState(initialValue);\n  const disabled = !Number(row.original[column.id] || 1);\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n  const onBlur = () => {\n    var _table$options$meta;\n    (_table$options$meta = table.options.meta) === null || _table$options$meta === void 0 ? void 0 : _table$options$meta.updateData(row, column, value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: value,\n    onChange: e => setValue(e.target.value),\n    onBlur: onBlur,\n    readOnly: checkIfDisabled(row, column),\n    disabled: checkIfDisabled(row, column),\n    style: {\n      border: \"none\",\n      borderRadius: 5,\n      padding: \"2px\",\n      color: \"#333\",\n      fontWeight: checkIfDisabled(row, column) ? 900 : 500,\n      outline: \"none\",\n      textAlign: \"center\",\n      backgroundColor: checkIfDisabled(row, column) ? \"lightgray\" : \"white\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableInput, \"tWiMN+R1KrlPc+I/v9D+hnPBFtc=\");\n_c = EditableInput;\nconst defaultColumn = {\n  cell: _ref2 => {\n    let {\n      getValue,\n      row,\n      column,\n      table\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(EditableInput, {\n      table: table,\n      column: column,\n      row: row,\n      getValue: getValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  }\n};\nexport function useSpreadsheetTable(tableData, columns, data, setData, setSetter) {\n  _s2();\n  const col = useMemo(() => columns, [columns]);\n  const table = useReactTable({\n    data: tableData,\n    columns: col,\n    defaultColumn,\n    getSubRows: rows => rows.subRows,\n    getCoreRowModel: getCoreRowModel(),\n    getExpandedRowModel: getExpandedRowModel(),\n    meta: {\n      updateData: (row, column, value) => {\n        setData(old => {\n          old.data[row.original.index][column.id] = value;\n          return old;\n        });\n        setSetter(old => !old);\n      }\n    },\n    debugTable: true\n  });\n  return {\n    table,\n    flexRender\n  };\n}\n_s2(useSpreadsheetTable, \"AJXxbBE1yg7x0eSbGid6T13VJtU=\", false, function () {\n  return [useReactTable];\n});\nvar _c;\n$RefreshReg$(_c, \"EditableInput\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useReactTable","getCoreRowModel","getExpandedRowModel","ColumnDef","flexRender","jsxDEV","_jsxDEV","EditableInput","_ref","_s","table","column","row","getValue","initialValue","value","setValue","disabled","Number","original","id","onBlur","_table$options$meta","options","meta","updateData","onChange","e","target","readOnly","checkIfDisabled","style","border","borderRadius","padding","color","fontWeight","outline","textAlign","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultColumn","cell","_ref2","useSpreadsheetTable","tableData","columns","data","setData","setSetter","_s2","col","getSubRows","rows","subRows","old","index","debugTable","$RefreshReg$"],"sources":["/Users/dev/Learning/assignment/kordis 2/packages/client/src/SpreadSheet/useSpreadsheetTable.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport {\n  useReactTable,\n  getCoreRowModel,\n  getExpandedRowModel,\n  ColumnDef,\n  flexRender,\n} from \"@tanstack/react-table\";\n\nconst EditableInput = ({ table, column, row, getValue }) => {\n  const initialValue = getValue();\n  const [value, setValue] = useState(initialValue);\n\n  const disabled = !Number(row.original[column.id] || 1);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onBlur = () => {\n    table.options.meta?.updateData(row, column, value);\n  };\n\n  return (\n    <input\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      onBlur={onBlur}\n      readOnly={checkIfDisabled(row, column)}\n      disabled={checkIfDisabled(row, column)}\n      style={{\n        border: \"none\",\n        borderRadius: 5,\n        padding: \"2px\",\n        color: \"#333\",\n        fontWeight: checkIfDisabled(row, column) ? 900 : 500,\n        outline: \"none\",\n        textAlign: \"center\",\n        backgroundColor: checkIfDisabled(row, column) ? \"lightgray\" : \"white\",\n      }}\n    />\n  );\n};\n\nconst defaultColumn = {\n  cell: ({ getValue, row, column, table }) => (\n    <EditableInput\n      table={table}\n      column={column}\n      row={row}\n      getValue={getValue}\n    />\n  ),\n};\n\nexport function useSpreadsheetTable(\n  tableData,\n  columns,\n  data,\n  setData,\n  setSetter\n) {\n  const col = useMemo(() => columns, [columns]);\n\n  const table = useReactTable({\n    data: tableData,\n    columns: col,\n    defaultColumn,\n    getSubRows: (rows) => rows.subRows,\n    getCoreRowModel: getCoreRowModel(),\n    getExpandedRowModel: getExpandedRowModel(),\n    meta: {\n      updateData: (row, column, value) => {\n        setData((old) => {\n          old.data[row.original.index][column.id] = value;\n          return old;\n        });\n        setSetter((old) => !old);\n      },\n    },\n    debugTable: true,\n  });\n\n  return { table, flexRender };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
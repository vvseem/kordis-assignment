{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Learning/assignment/kordis 2/packages/client/src/SpreadSheet/data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const col = data => {\n  var _data$headers;\n  const computedRows = {};\n  return data === null || data === void 0 ? void 0 : (_data$headers = data.headers) === null || _data$headers === void 0 ? void 0 : _data$headers.map(e => {\n    return {\n      accessorFn: row => {\n        if (e !== \"item\") return getComputedCell(row.index, e, data.data, computedRows).toFixed(2);\n        return row[e];\n      },\n      accessorKey: e,\n      ...(e === \"item\" && {\n        cell: _ref => {\n          let {\n            row,\n            getValue\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingLeft: `${row.depth * 2}rem`\n            },\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [row.getCanExpand() ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: row.getToggleExpandedHandler(),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: row.getIsExpanded() ? \"^\" : \">\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 19\n              }, this) : \"\", \" \", getValue()]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this);\n        }\n      }),\n      header: () => e.toUpperCase(),\n      footer: props => props.column.id\n    };\n  });\n};\nexport function transformData(data, jsonData) {\n  const output = [];\n  for (const key in jsonData.root) {\n    const item = jsonData.data[key];\n    const subRows = transformSubRows(data, jsonData.root[key]);\n    output.push({\n      [item.displayName]: {\n        ...item,\n        subRows\n      }\n    });\n  }\n  return output;\n}\nfunction transformSubRows(data, subRowsData) {\n  const subRows = [];\n  for (const key in subRowsData) {\n    const item = data[key];\n    const subRowData = item ? transformSubRows(data, subRowsData[key]) : undefined;\n    subRows.push({\n      ...item,\n      subRows: subRowData.length ? subRowData : undefined\n    });\n  }\n  return subRows;\n}","map":{"version":3,"names":["col","data","_data$headers","computedRows","headers","map","e","accessorFn","row","getComputedCell","index","toFixed","accessorKey","cell","_ref","getValue","_jsxDEV","style","paddingLeft","depth","children","_Fragment","getCanExpand","onClick","getToggleExpandedHandler","cursor","getIsExpanded","fileName","_jsxFileName","lineNumber","columnNumber","header","toUpperCase","footer","props","column","id","transformData","jsonData","output","key","root","item","subRows","transformSubRows","push","displayName","subRowsData","subRowData","undefined","length"],"sources":["/Users/dev/Learning/assignment/kordis 2/packages/client/src/SpreadSheet/data.js"],"sourcesContent":["export const col = (data) => {\n  const computedRows = {};\n\n  return data?.headers?.map((e) => {\n    return {\n      accessorFn: (row) => {\n        if (e !== \"item\")\n          return getComputedCell(row.index, e, data.data, computedRows).toFixed(\n            2\n          );\n        return row[e];\n      },\n      accessorKey: e,\n      ...(e === \"item\" && {\n        cell: ({ row, getValue }) => {\n          return (\n            <div\n              style={{\n                paddingLeft: `${row.depth * 2}rem`,\n              }}\n            >\n              <>\n                {row.getCanExpand() ? (\n                  <button\n                    {...{\n                      onClick: row.getToggleExpandedHandler(),\n                      style: { cursor: \"pointer\" },\n                    }}\n                  >\n                    {row.getIsExpanded() ? \"^\" : \">\"}\n                  </button>\n                ) : (\n                  \"\"\n                )}{\" \"}\n                {getValue()}\n              </>\n            </div>\n          );\n        },\n      }),\n      header: () => e.toUpperCase(),\n      footer: (props) => props.column.id,\n    };\n  });\n};\n\nexport function transformData(data, jsonData) {\n  const output = [];\n  for (const key in jsonData.root) {\n    const item = jsonData.data[key];\n    const subRows = transformSubRows(data, jsonData.root[key]);\n\n    output.push({\n      [item.displayName]: { ...item, subRows },\n    });\n  }\n  return output;\n}\n\nfunction transformSubRows(data, subRowsData) {\n  const subRows = [];\n  for (const key in subRowsData) {\n    const item = data[key];\n    const subRowData = item\n      ? transformSubRows(data, subRowsData[key])\n      : undefined;\n    subRows.push({\n      ...item,\n      subRows: subRowData.length ? subRowData : undefined,\n    });\n  }\n  return subRows;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
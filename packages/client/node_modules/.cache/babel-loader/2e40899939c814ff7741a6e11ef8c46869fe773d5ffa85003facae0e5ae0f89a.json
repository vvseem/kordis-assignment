{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Learning/assignment/kordis 2/packages/client/src/components/SpreadSheet/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport getTransformedData from \"./getTransformedData\";\nimport { useSpreadsheetTable } from \"./useSpreadsheetTable\";\nimport getColumns from \"./getColumns\";\nimport \"./index.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpreadSheetTable = _ref => {\n  _s();\n  let {\n    value\n  } = _ref;\n  const [tableMeta, setTableMeta] = useState(value);\n  const [tableData, setTableData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [setter, setSetter] = useState(false);\n  useEffect(() => {\n    if (Object.keys(tableMeta).length) {\n      const newData = getTransformedData(tableMeta.data, tableMeta);\n      setTableData(newData.reduce((acc, val) => {\n        Object.keys(val).forEach(e => {\n          acc.push(val[e]);\n        });\n        return acc;\n      }, []));\n      setColumns(getColumns(tableMeta));\n    }\n  }, [setter, tableMeta, setTableData, setColumns]);\n  const {\n    table,\n    flexRender\n  } = useSpreadsheetTable(tableData, columns, setTableMeta, setSetter);\n  if (!tableData) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spreadsheet-text\",\n      children: \"Spreadsheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: header.colSpan,\n              children: header.isPlaceholder ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: flexRender(header.column.columnDef.header, header.getContext())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this)\n            }, header.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this);\n          })\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.getVisibleCells().map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: flexRender(cell.column.columnDef.cell, cell.getContext())\n              }, cell.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this);\n            })\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SpreadSheetTable, \"mkqa/YQh3WlOmYOOpkLP498RAEc=\", false, function () {\n  return [useSpreadsheetTable];\n});\n_c = SpreadSheetTable;\nexport default SpreadSheetTable;\nvar _c;\n$RefreshReg$(_c, \"SpreadSheetTable\");","map":{"version":3,"names":["React","useEffect","useState","getTransformedData","useSpreadsheetTable","getColumns","Fragment","_Fragment","jsxDEV","_jsxDEV","SpreadSheetTable","_ref","_s","value","tableMeta","setTableMeta","tableData","setTableData","columns","setColumns","setter","setSetter","Object","keys","length","newData","data","reduce","acc","val","forEach","e","push","table","flexRender","children","className","fileName","_jsxFileName","lineNumber","columnNumber","getHeaderGroups","map","headerGroup","headers","header","colSpan","isPlaceholder","column","columnDef","getContext","id","getRowModel","rows","row","getVisibleCells","cell","_c","$RefreshReg$"],"sources":["/Users/dev/Learning/assignment/kordis 2/packages/client/src/components/SpreadSheet/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport getTransformedData from \"./getTransformedData\";\nimport { useSpreadsheetTable } from \"./useSpreadsheetTable\";\nimport getColumns from \"./getColumns\";\nimport \"./index.css\";\n\nconst SpreadSheetTable = ({ value }) => {\n  const [tableMeta, setTableMeta] = useState(value);\n  const [tableData, setTableData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [setter, setSetter] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(tableMeta).length) {\n      const newData = getTransformedData(tableMeta.data, tableMeta);\n      setTableData(\n        newData.reduce((acc, val) => {\n          Object.keys(val).forEach((e) => {\n            acc.push(val[e]);\n          });\n          return acc;\n        }, [])\n      );\n\n      setColumns(getColumns(tableMeta));\n    }\n  }, [setter, tableMeta, setTableData, setColumns]);\n\n  const { table, flexRender } = useSpreadsheetTable(\n    tableData,\n    columns,\n    setTableMeta,\n    setSetter\n  );\n\n  if (!tableData) return <></>;\n\n  return (\n    <>\n      <div className=\"spreadsheet-text\">Spreadsheet</div>\n      <table className=\"table\">\n        <thead>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <tr key={headerGroup.id}>\n              {headerGroup.headers.map((header) => {\n                return (\n                  <th key={header.id} colSpan={header.colSpan}>\n                    {header.isPlaceholder ? null : (\n                      <div>\n                        {flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                      </div>\n                    )}\n                  </th>\n                );\n              })}\n            </tr>\n          ))}\n        </thead>\n\n        <tbody>\n          {table.getRowModel().rows.map((row) => {\n            return (\n              <tr key={row.id}>\n                {row.getVisibleCells().map((cell) => {\n                  return (\n                    <td key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default SpreadSheetTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
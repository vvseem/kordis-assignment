{"ast":null,"code":"const range = len => {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\n\n// const newPerson = (): any=> {\n//   return {\n//     data: faker.name.firstName(),\n//     lastName: faker.name.lastName(),\n//     jan: faker.datatype.number(40),\n//     feb: faker.datatype.number(1000),\n//     progress: faker.datatype.number(100),\n//     status: faker.helpers.shuffle<Person['status']>([\n//       'relationship',\n//       'complicated',\n//       'single',\n//     ])[0]!,\n//   }\n// }\n\n// export function makeData(...lens: number[]) {\n//   const makeDataLevel = (depth = 0): Person[] => {\n//     const len = lens[depth]!\n//     return range(len).map((d): Person => {\n//       return {\n//         // ...newPerson(),\n//         subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n//       }\n//     })\n//   }\n\n//   return makeDataLevel()\n// }\nexport {};","map":{"version":3,"names":["range","len","arr","i","push"],"sources":["/home/ubuntu/Desktop/SpreadSheet/spreadsheet-app/src/Spreadsheet/makeData.tsx"],"sourcesContent":["import { faker } from '@faker-js/faker'\n\nexport type Person = {\n  data: string\n  jan: string\n  feb: string\n  mar: number\n}\n\nconst range = (len: number) => {\n  const arr = []\n  for (let i = 0; i < len; i++) {\n    arr.push(i)\n  }\n  return arr\n}\n\n// const newPerson = (): any=> {\n//   return {\n//     data: faker.name.firstName(),\n//     lastName: faker.name.lastName(),\n//     jan: faker.datatype.number(40),\n//     feb: faker.datatype.number(1000),\n//     progress: faker.datatype.number(100),\n//     status: faker.helpers.shuffle<Person['status']>([\n//       'relationship',\n//       'complicated',\n//       'single',\n//     ])[0]!,\n//   }\n// }\n\n\n\n\n// export function makeData(...lens: number[]) {\n//   const makeDataLevel = (depth = 0): Person[] => {\n//     const len = lens[depth]!\n//     return range(len).map((d): Person => {\n//       return {\n//         // ...newPerson(),\n//         subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n//       }\n//     })\n//   }\n\n//   return makeDataLevel()\n// }"],"mappings":"AASA,MAAMA,KAAK,GAAIC,GAAW,IAAK;EAC7B,MAAMC,GAAG,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;IAC5BD,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;EACb;EACA,OAAOD,GAAG;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
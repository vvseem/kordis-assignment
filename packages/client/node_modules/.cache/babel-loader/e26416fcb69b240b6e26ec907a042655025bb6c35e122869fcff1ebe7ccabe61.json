{"ast":null,"code":"export function getTransformedData(rows, data) {\n  const rootKeys = Object.keys(data.root);\n  return rootKeys.map(key => {\n    const item = data.data[key];\n    const subRows = transformSubRows(rows, data.root[key]);\n    return {\n      [item.displayName]: {\n        ...item,\n        subRows\n      }\n    };\n  });\n}\nfunction transformSubRows(rows, subRowsData) {\n  const rootKeys = Object.keys(subRowsData);\n  return rootKeys.map(key => {\n    const item = rows[key];\n    const subRowData = item ? transformSubRows(row, subRowsData[key]) : undefined;\n  });\n  for (const key in subRowsData) {\n    const item = data[key];\n    const subRowData = item ? transformSubRows(data, subRowsData[key]) : undefined;\n    subRows.push({\n      ...item,\n      subRows: subRowData.length ? subRowData : undefined\n    });\n  }\n  return subRows;\n}","map":{"version":3,"names":["getTransformedData","rows","data","rootKeys","Object","keys","root","map","key","item","subRows","transformSubRows","displayName","subRowsData","subRowData","row","undefined","push","length"],"sources":["/Users/dev/Learning/assignment/kordis 2/packages/client/src/SpreadSheet/getTransformedData.js"],"sourcesContent":["export function getTransformedData(rows, data) {\n  const rootKeys = Object.keys(data.root);\n\n  return rootKeys.map((key) => {\n    const item = data.data[key];\n    const subRows = transformSubRows(rows, data.root[key]);\n\n    return {\n      [item.displayName]: { ...item, subRows },\n    };\n  });\n}\n\nfunction transformSubRows(rows, subRowsData) {\n  const rootKeys = Object.keys(subRowsData);\n\n  return rootKeys.map((key) => {\n    const item = rows[key];\n    const subRowData = item\n      ? transformSubRows(row, subRowsData[key])\n      : undefined;\n  });\n\n  for (const key in subRowsData) {\n    const item = data[key];\n    const subRowData = item\n      ? transformSubRows(data, subRowsData[key])\n      : undefined;\n    subRows.push({\n      ...item,\n      subRows: subRowData.length ? subRowData : undefined,\n    });\n  }\n  return subRows;\n}\n"],"mappings":"AAAA,OAAO,SAASA,kBAAkBA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAC7C,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC;EAEvC,OAAOH,QAAQ,CAACI,GAAG,CAAEC,GAAG,IAAK;IAC3B,MAAMC,IAAI,GAAGP,IAAI,CAACA,IAAI,CAACM,GAAG,CAAC;IAC3B,MAAME,OAAO,GAAGC,gBAAgB,CAACV,IAAI,EAAEC,IAAI,CAACI,IAAI,CAACE,GAAG,CAAC,CAAC;IAEtD,OAAO;MACL,CAACC,IAAI,CAACG,WAAW,GAAG;QAAE,GAAGH,IAAI;QAAEC;MAAQ;IACzC,CAAC;EACH,CAAC,CAAC;AACJ;AAEA,SAASC,gBAAgBA,CAACV,IAAI,EAAEY,WAAW,EAAE;EAC3C,MAAMV,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACQ,WAAW,CAAC;EAEzC,OAAOV,QAAQ,CAACI,GAAG,CAAEC,GAAG,IAAK;IAC3B,MAAMC,IAAI,GAAGR,IAAI,CAACO,GAAG,CAAC;IACtB,MAAMM,UAAU,GAAGL,IAAI,GACnBE,gBAAgB,CAACI,GAAG,EAAEF,WAAW,CAACL,GAAG,CAAC,CAAC,GACvCQ,SAAS;EACf,CAAC,CAAC;EAEF,KAAK,MAAMR,GAAG,IAAIK,WAAW,EAAE;IAC7B,MAAMJ,IAAI,GAAGP,IAAI,CAACM,GAAG,CAAC;IACtB,MAAMM,UAAU,GAAGL,IAAI,GACnBE,gBAAgB,CAACT,IAAI,EAAEW,WAAW,CAACL,GAAG,CAAC,CAAC,GACxCQ,SAAS;IACbN,OAAO,CAACO,IAAI,CAAC;MACX,GAAGR,IAAI;MACPC,OAAO,EAAEI,UAAU,CAACI,MAAM,GAAGJ,UAAU,GAAGE;IAC5C,CAAC,CAAC;EACJ;EACA,OAAON,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
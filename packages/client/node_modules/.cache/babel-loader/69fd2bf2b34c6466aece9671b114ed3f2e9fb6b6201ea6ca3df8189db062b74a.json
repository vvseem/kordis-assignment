{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Learning/assignment/kordis 2/packages/client/src/Spreadsheet/data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const computeCell = (row, column, rawRows, computedRows) => {\n  var _eval;\n  computedRows[row] = {\n    ...computedRows[row],\n    [column]: (_eval = eval(rawRows[row][column].replace(/'(.+?)'&'(.+?)'/g, (_, r, c) => {\n      var _computedRows$r$c, _computedRows$r;\n      return (_computedRows$r$c = computedRows === null || computedRows === void 0 ? void 0 : (_computedRows$r = computedRows[r]) === null || _computedRows$r === void 0 ? void 0 : _computedRows$r[c]) !== null && _computedRows$r$c !== void 0 ? _computedRows$r$c : computeCell(r, c, rawRows, computedRows);\n    }))) !== null && _eval !== void 0 ? _eval : 0\n  };\n  return computedRows[row][column];\n};\nexport const col = data => {\n  var _data$headers;\n  const computedRows = {};\n  return data === null || data === void 0 ? void 0 : (_data$headers = data.headers) === null || _data$headers === void 0 ? void 0 : _data$headers.map(e => {\n    return {\n      accessorFn: row => {\n        if (e !== \"item\") return computeCell(row.index, e, data.data, computedRows).toFixed(2);\n        return row[e];\n      },\n      accessorKey: e,\n      ...(e === \"item\" && {\n        cell: _ref => {\n          let {\n            row,\n            getValue\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingLeft: `${row.depth * 2}rem`\n            },\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [row.getCanExpand() ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: row.getToggleExpandedHandler(),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: row.getIsExpanded() ? '^' : '>'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this) : '', ' ', getValue()]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this);\n        }\n      }),\n      header: () => e.toUpperCase(),\n      footer: props => props.column.id\n    };\n  });\n};\nexport function transformData(data, jsonData) {\n  const output = [];\n  for (const key in jsonData.root) {\n    const item = jsonData.data[key];\n    const subRows = transformSubRows(data, jsonData.root[key]);\n    output.push({\n      [item.displayName]: {\n        ...item,\n        subRows\n      }\n    });\n  }\n  return output;\n}\nfunction transformSubRows(data, subRowsData) {\n  const subRows = [];\n  for (const key in subRowsData) {\n    const item = data[key];\n    const subRowData = item ? transformSubRows(data, subRowsData[key]) : undefined;\n    subRows.push({\n      ...item,\n      subRows: subRowData.length ? subRowData : undefined\n    });\n  }\n  return subRows;\n}","map":{"version":3,"names":["computeCell","row","column","rawRows","computedRows","_eval","eval","replace","_","r","c","_computedRows$r$c","_computedRows$r","col","data","_data$headers","headers","map","e","accessorFn","index","toFixed","accessorKey","cell","_ref","getValue","_jsxDEV","style","paddingLeft","depth","children","_Fragment","getCanExpand","onClick","getToggleExpandedHandler","cursor","getIsExpanded","fileName","_jsxFileName","lineNumber","columnNumber","header","toUpperCase","footer","props","id","transformData","jsonData","output","key","root","item","subRows","transformSubRows","push","displayName","subRowsData","subRowData","undefined","length"],"sources":["/Users/dev/Learning/assignment/kordis 2/packages/client/src/Spreadsheet/data.js"],"sourcesContent":["export const computeCell = (row, column, rawRows, computedRows) => {\n  computedRows[row] = {\n    ...computedRows[row],\n    [column]:\n      eval(\n        rawRows[row][column].replace(\n          /'(.+?)'&'(.+?)'/g,\n          (_, r, c) => {\n            return computedRows?.[r]?.[c] ?? computeCell(r, c, rawRows, computedRows)\n        })\n      ) ?? 0,\n  };\n  return computedRows[row][column];\n};\n\nexport const col = (data) => {\n  const computedRows = {};\n\n  return data?.headers?.map(e => {\n    return {\n        accessorFn: row => {\n          if (e !== \"item\")\n            return (computeCell(row.index, e, data.data, computedRows)).toFixed(2)\n          return row[e];\n        },\n        accessorKey: e,\n        ...(e===\"item\" && {cell: ({ row, getValue }) => {\n            return (\n            <div\n              style={{\n                paddingLeft: `${row.depth * 2}rem`,\n              }}\n            >\n              <>\n                {row.getCanExpand() ? (\n                  <button\n                    {...{\n                      onClick: row.getToggleExpandedHandler(),\n                      style: { cursor: 'pointer' },\n                    }}\n                  >\n                    {row.getIsExpanded() ? '^' : '>'}\n                  </button>\n                ) : (\n                  ''\n                )}{' '}\n                {getValue()}\n              </>\n            </div>\n          )}}),\n        header: () => e.toUpperCase(),\n        footer: (props) => props.column.id,\n    }\n  })\n}\n\nexport function transformData(data, jsonData) {\n  const output = [];\n  for (const key in jsonData.root) {\n    const item = jsonData.data[key];\n    const subRows = transformSubRows(data, jsonData.root[key]);\n\n    output.push({\n      [item.displayName]: { ...item, subRows }\n    });\n  }\n  return output;\n}\n\nfunction transformSubRows(data, subRowsData) {\n  const subRows = [];  \n    for (const key in subRowsData) {\n      const item = data[key];\n      const subRowData = item ? transformSubRows(data, subRowsData[key]) : undefined;\n      subRows.push(\n          { ...item, subRows: subRowData.length ? subRowData :undefined }\n      );\n    }\n  return subRows;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
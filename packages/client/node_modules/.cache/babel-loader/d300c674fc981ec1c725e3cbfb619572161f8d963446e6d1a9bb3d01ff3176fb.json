{"ast":null,"code":"export function getTransformedData(rows, jsonData) {\n  const output = [];\n  const rootKeys = Object.keys(jsonData.root);\n  return rootKeys.map(key => {\n    const item = jsonData.data[key];\n    const subRows = transformSubRows(rows, jsonData.root[key]);\n    return {\n      [item.displayName]: {\n        ...item,\n        subRows\n      }\n    };\n  });\n  for (const key in jsonData.root) {\n    const item = jsonData.data[key];\n    const subRows = transformSubRows(rows, jsonData.root[key]);\n    output.push({\n      [item.displayName]: {\n        ...item,\n        subRows\n      }\n    });\n  }\n  return output;\n}\nfunction transformSubRows(data, subRowsData) {\n  const subRows = [];\n  for (const key in subRowsData) {\n    const item = data[key];\n    const subRowData = item ? transformSubRows(data, subRowsData[key]) : undefined;\n    subRows.push({\n      ...item,\n      subRows: subRowData.length ? subRowData : undefined\n    });\n  }\n  return subRows;\n}","map":{"version":3,"names":["getTransformedData","rows","jsonData","output","rootKeys","Object","keys","root","map","key","item","data","subRows","transformSubRows","displayName","push","subRowsData","subRowData","undefined","length"],"sources":["/Users/dev/Learning/assignment/kordis 2/packages/client/src/SpreadSheet/getTransformedData.js"],"sourcesContent":["export function getTransformedData(rows, jsonData) {\n  const output = [];\n\n  const rootKeys = Object.keys(jsonData.root);\n\n  return rootKeys.map((key) => {\n    const item = jsonData.data[key];\n    const subRows = transformSubRows(rows, jsonData.root[key]);\n\n    return {\n      [item.displayName]: { ...item, subRows },\n    };\n  });\n\n  for (const key in jsonData.root) {\n    const item = jsonData.data[key];\n    const subRows = transformSubRows(rows, jsonData.root[key]);\n\n    output.push({\n      [item.displayName]: { ...item, subRows },\n    });\n  }\n\n  return output;\n}\n\nfunction transformSubRows(data, subRowsData) {\n  const subRows = [];\n  for (const key in subRowsData) {\n    const item = data[key];\n    const subRowData = item\n      ? transformSubRows(data, subRowsData[key])\n      : undefined;\n    subRows.push({\n      ...item,\n      subRows: subRowData.length ? subRowData : undefined,\n    });\n  }\n  return subRows;\n}\n"],"mappings":"AAAA,OAAO,SAASA,kBAAkBA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EACjD,MAAMC,MAAM,GAAG,EAAE;EAEjB,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC;EAE3C,OAAOH,QAAQ,CAACI,GAAG,CAAEC,GAAG,IAAK;IAC3B,MAAMC,IAAI,GAAGR,QAAQ,CAACS,IAAI,CAACF,GAAG,CAAC;IAC/B,MAAMG,OAAO,GAAGC,gBAAgB,CAACZ,IAAI,EAAEC,QAAQ,CAACK,IAAI,CAACE,GAAG,CAAC,CAAC;IAE1D,OAAO;MACL,CAACC,IAAI,CAACI,WAAW,GAAG;QAAE,GAAGJ,IAAI;QAAEE;MAAQ;IACzC,CAAC;EACH,CAAC,CAAC;EAEF,KAAK,MAAMH,GAAG,IAAIP,QAAQ,CAACK,IAAI,EAAE;IAC/B,MAAMG,IAAI,GAAGR,QAAQ,CAACS,IAAI,CAACF,GAAG,CAAC;IAC/B,MAAMG,OAAO,GAAGC,gBAAgB,CAACZ,IAAI,EAAEC,QAAQ,CAACK,IAAI,CAACE,GAAG,CAAC,CAAC;IAE1DN,MAAM,CAACY,IAAI,CAAC;MACV,CAACL,IAAI,CAACI,WAAW,GAAG;QAAE,GAAGJ,IAAI;QAAEE;MAAQ;IACzC,CAAC,CAAC;EACJ;EAEA,OAAOT,MAAM;AACf;AAEA,SAASU,gBAAgBA,CAACF,IAAI,EAAEK,WAAW,EAAE;EAC3C,MAAMJ,OAAO,GAAG,EAAE;EAClB,KAAK,MAAMH,GAAG,IAAIO,WAAW,EAAE;IAC7B,MAAMN,IAAI,GAAGC,IAAI,CAACF,GAAG,CAAC;IACtB,MAAMQ,UAAU,GAAGP,IAAI,GACnBG,gBAAgB,CAACF,IAAI,EAAEK,WAAW,CAACP,GAAG,CAAC,CAAC,GACxCS,SAAS;IACbN,OAAO,CAACG,IAAI,CAAC;MACX,GAAGL,IAAI;MACPE,OAAO,EAAEK,UAAU,CAACE,MAAM,GAAGF,UAAU,GAAGC;IAC5C,CAAC,CAAC;EACJ;EACA,OAAON,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
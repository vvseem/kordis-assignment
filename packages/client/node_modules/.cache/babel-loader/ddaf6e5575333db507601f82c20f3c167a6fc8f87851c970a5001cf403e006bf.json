{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/Project/spreadsheet-app/kordis/packages/client/src/customHook/useCreAteTable.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { useReactTable, getCoreRowModel, getExpandedRowModel, flexRender } from '@tanstack/react-table';\nimport { col, transformData } from '../Spreadsheet/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableInput = _ref => {\n  _s();\n  let {\n    table,\n    column,\n    row,\n    getValue\n  } = _ref;\n  const initialValue = getValue();\n  const [value, setValue] = React.useState(initialValue);\n  const onBlur = () => {\n    var _table$options$meta;\n    (_table$options$meta = table.options.meta) === null || _table$options$meta === void 0 ? void 0 : _table$options$meta.updateData(row, column, value);\n  };\n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: value,\n    onChange: e => setValue(e.target.value),\n    onBlur: onBlur\n    // onClick={() => console.log(row, column)}\n    ,\n    readOnly: checkIfDisabled(row, column),\n    style: {\n      border: \"none\",\n      borderRadius: 5,\n      padding: \"2px\",\n      color: \"#333\",\n      backgroundColor: \"#E5E4E2\",\n      outline: \"none\",\n      textAlign: \"center\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableInput, \"tWiMN+R1KrlPc+I/v9D+hnPBFtc=\");\n_c = EditableInput;\nconst checkIfDisabled = (row, column) => !Number(row.original[column.id] || 1);\nconst updateTableData = (data, row, column, value) => {\n  console.log(data);\n  for (const parent of row.getParentRows()) {}\n  console.log(column);\n};\nconst defaultColumn = {\n  cell: _ref2 => {\n    let {\n      getValue,\n      row,\n      column,\n      table\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(EditableInput, {\n      table: table,\n      column: column,\n      row: row,\n      getValue: getValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this);\n  }\n};\nexport function useTable(data, setData) {\n  _s2();\n  const newData = transformData(data.data, data);\n  const tableData = newData.reduce((acc, val) => {\n    Object.keys(val).forEach(e => {\n      acc.push(val[e]);\n    });\n    return acc;\n  }, []);\n  console.log(\"================\", tableData);\n  const columns = React.useMemo(() => col(data), [data]);\n  const table = useReactTable({\n    data: tableData,\n    columns,\n    defaultColumn,\n    getSubRows: row => row.subRows,\n    getCoreRowModel: getCoreRowModel(),\n    getExpandedRowModel: getExpandedRowModel(),\n    meta: {\n      updateData: (row, column, value) => {\n        // data[]\n        // setData()\n        console.log(data);\n      }\n    },\n    debugTable: true\n  });\n  return {\n    table,\n    flexRender\n  };\n}\n_s2(useTable, \"4hPNPOVD6NmFgooi8etqClAnRtQ=\", false, function () {\n  return [useReactTable];\n});\nvar _c;\n$RefreshReg$(_c, \"EditableInput\");","map":{"version":3,"names":["React","useReactTable","getCoreRowModel","getExpandedRowModel","flexRender","col","transformData","jsxDEV","_jsxDEV","EditableInput","_ref","_s","table","column","row","getValue","initialValue","value","setValue","useState","onBlur","_table$options$meta","options","meta","updateData","useEffect","onChange","e","target","readOnly","checkIfDisabled","style","border","borderRadius","padding","color","backgroundColor","outline","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","Number","original","id","updateTableData","data","console","log","parent","getParentRows","defaultColumn","cell","_ref2","useTable","setData","_s2","newData","tableData","reduce","acc","val","Object","keys","forEach","push","columns","useMemo","getSubRows","subRows","debugTable","$RefreshReg$"],"sources":["/home/ubuntu/Desktop/Project/spreadsheet-app/kordis/packages/client/src/customHook/useCreAteTable.tsx"],"sourcesContent":["import React from 'react'\n\nimport {\n  useReactTable,\n  getCoreRowModel,\n  getExpandedRowModel,\n  ColumnDef,\n  flexRender,\n  RowData\n} from '@tanstack/react-table'\nimport { col, transformData } from '../Spreadsheet/data'\n\ndeclare module '@tanstack/react-table' {\n  interface TableMeta<TData extends RowData> {\n    updateData: (rowIndex: number, columnId: string, value: unknown) => void\n  }\n}\n\nconst EditableInput = ({ table, column, row, getValue }: any) => {\n  const initialValue = getValue()\n  const [value, setValue] = React.useState(initialValue)\n\n  const onBlur = () => {\n    table.options.meta?.updateData(row, column, value)\n  }\n\n  React.useEffect(() => {\n    setValue(initialValue)\n  }, [initialValue])\n\n  return (\n    <input\n      value={value as string}\n      onChange={e => setValue(e.target.value)}\n      onBlur={onBlur}\n      // onClick={() => console.log(row, column)}\n      readOnly={checkIfDisabled(row, column)}\n      style={{\n        border: \"none\",\n        borderRadius: 5,\n        padding: \"2px\",\n        color: \"#333\",\n        backgroundColor: \"#E5E4E2\",\n        outline: \"none\",\n        textAlign: \"center\"\n      }}\n    />\n  )\n}\n\nconst checkIfDisabled = (row: any, column: any) => !Number(row.original[column.id] || 1)\n\nconst updateTableData = (data: any, row: any, column: any, value: any) => {\n  console.log(data)\n\n  for (const parent of row.getParentRows()) {\n    \n  }\n  console.log(column)\n\n}\n\nconst defaultColumn: Partial<ColumnDef<any>> = {\n  cell: ({ \n    getValue,\n    row,\n    column,\n    table\n  }) => <EditableInput table={table} column={column} row={row} getValue={getValue} />,\n}\n\nexport function useTable(data:any, setData: React.Dispatch<React.SetStateAction<null>>) {\n  const newData = transformData(data.data, data)\n  const tableData = newData.reduce((acc:any, val:any) => {\n    Object.keys(val).forEach(e => {\n        acc.push(val[e])\n    })\n    return acc\n  }, [])\n\n  console.log(\"================\",tableData)\n  \n  const columns = React.useMemo<ColumnDef<any>[]>(\n    () => col(data),\n    [ data]\n  )\n\n  const table = useReactTable({\n    data: tableData,\n    columns,\n    defaultColumn,\n    getSubRows: (row: any) => row.subRows,\n    getCoreRowModel: getCoreRowModel(),\n    getExpandedRowModel: getExpandedRowModel(),\n    meta: {\n      updateData: (row, column, value) => {\n        // data[]\n        // setData()\n        console.log(data)\n      },\n    },\n    debugTable: true,\n  })\n  return { table, flexRender }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}